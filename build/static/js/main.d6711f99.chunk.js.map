{"version":3,"sources":["store/utility.js","store/reducers/auth.js","store/actions/actionTypes.js","store/reducers/nav.js","store/reducers/message.js","hoc/hoc.js","settings.js","websocket.js","containers/Chat.js","routes.js","store/actions/auth.js","store/actions/message.js","components/Contact.js","containers/Sidepanel.js","store/actions/nav.js","containers/Profile.js","containers/Form.js","containers/Popup.js","App.js","index.js"],"names":["updateObject","oldObject","updatedProperties","initialState","token","username","error","loading","reducer","state","action","type","authStart","authSuccess","authFail","authLogout","showAddChatPopup","openAddChatPopup","closeAddChatPopup","messages","chats","message","addMessage","reverse","setMessages","setChats","Hoc","props","children","HOST_URL","SOCKET_URL","WebSocketService","instance","constructor","callbacks","this","socketRef","connect","chatUrl","path","WebSocket","onopen","console","log","onmessage","e","socketNewMessage","data","onerror","onclose","disconnect","close","parsedData","JSON","parse","command","Object","keys","length","fetchMessages","chatId","sendMessage","newChatMessage","from","content","addCallbacks","messagesCallback","newMessageCallback","send","stringify","err","readyState","WebSocketInstance","getInstance","Chat","React","Component","initialiseChat","waitForSocketConnection","match","params","chatID","super","messageChangeHandler","event","setState","target","value","sendMessageHandler","preventDefault","messageObject","renderTimestamp","timestamp","prefix","timeDiff","Math","round","Date","getTime","renderMessages","currentUser","map","i","arr","key","id","style","marginBottom","className","author","src","alt","scrollToBottom","messagesEnd","scrollIntoView","behavior","callback","component","setTimeout","componentDidMount","componentDidUpdate","componentWillReceiveProps","newProps","render","float","clear","ref","el","onSubmit","onChange","required","placeholder","aria-hidden","auth","BaseRouter","Route","exact","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","getUserChats","axios","defaults","xsrfHeaderName","xsrfCookieName","headers","Authorization","get","then","res","Contact","NavLink","to","chatURL","color","status","picURL","name","antIcon","fontSize","spin","Sidepanel","loginForm","changeForm","authenticate","login","password","signup","email","password2","waitForAuthDetails","undefined","addChat","activeChats","c","indicator","isAuthenticated","onClick","method","htmlFor","userName","post","expirationDate","setItem","catch","actions","password1","messageActions","Profile","Redirect","FormItem","Form","Item","HorizontalAddChatForm","usernames","handleChange","handleSubmit","form","validateFields","values","combined","participants","history","push","getFieldDecorator","getFieldsError","getFieldError","isFieldTouched","userNameError","layout","validateStatus","help","rules","mode","width","htmlType","disabled","fieldsError","some","field","AddChatForm","create","withRouter","AddChatModal","centered","footer","visible","isVisible","onCancel","App","onTryAutoSignup","bind","nav","authenticated","getItem","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","rootReducer","combineReducers","authReducer","navReducer","messageReducer","createStore","applyMiddleware","thunk","configureStore","app","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d6711f99.chunk.js","sourcesContent":["export const updateObject = (oldObject, updatedProperties) => {\n  return {\n    ...oldObject,\n    ...updatedProperties\n  };\n};\n","import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\n\nconst initialState = {\n  token: null,\n  username: null,\n  error: null,\n  loading: false\n};\n\nconst authStart = (state, action) => {\n  return updateObject(state, {\n    error: null,\n    loading: true\n  });\n};\n\nconst authSuccess = (state, action) => {\n  return updateObject(state, {\n    token: action.token,\n    username: action.username,\n    error: null,\n    loading: false\n  });\n};\n\nconst authFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error,\n    loading: false\n  });\n};\n\nconst authLogout = (state, action) => {\n  return updateObject(state, {\n    token: null,\n    username: null\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.AUTH_START:\n      return authStart(state, action);\n    case actionTypes.AUTH_SUCCESS:\n      return authSuccess(state, action);\n    case actionTypes.AUTH_FAIL:\n      return authFail(state, action);\n    case actionTypes.AUTH_LOGOUT:\n      return authLogout(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","export const AUTH_START = \"AUTH_START\";\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\nexport const AUTH_FAIL = \"AUTH_FAIL\";\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\nexport const OPEN_ADD_CHAT_POPUP = \"OPEN_ADD_CHAT_POPUP\";\nexport const CLOSE_ADD_CHAT_POPUP = \"CLOSE_ADD_CHAT_POPUP\";\nexport const ADD_MESSAGE = \"ADD_MESSAGE\";\nexport const SET_MESSAGES = \"SET_MESSAGES\";\nexport const GET_CHATS_SUCCESS = \"GET_CHATS_SUCCESS\";\n","import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\n\nconst initialState = {\n  showAddChatPopup: false\n};\n\nconst openAddChatPopup = (state, action) => {\n  return updateObject(state, { showAddChatPopup: true });\n};\n\nconst closeAddChatPopup = (state, action) => {\n  return updateObject(state, { showAddChatPopup: false });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.OPEN_ADD_CHAT_POPUP:\n      return openAddChatPopup(state, action);\n    case actionTypes.CLOSE_ADD_CHAT_POPUP:\n      return closeAddChatPopup(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\n\nconst initialState = {\n  messages: [],\n  chats: []\n};\n\nconst addMessage = (state, action) => {\n  return updateObject(state, {\n    messages: [...state.messages, action.message]\n  });\n};\n\nconst setMessages = (state, action) => {\n  return updateObject(state, {\n    messages: action.messages.reverse()\n  });\n};\n\nconst setChats = (state, action) => {\n  return updateObject(state, {\n    chats: action.chats\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_MESSAGE:\n      return addMessage(state, action);\n    case actionTypes.SET_MESSAGES:\n      return setMessages(state, action);\n    case actionTypes.GET_CHATS_SUCCESS:\n      return setChats(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","const Hoc = props => props.children;\n\nexport default Hoc;\n","let DEBUG = false;\nlet HOST_URL = \"https://clownchat.herokuapp.com\";\nlet SOCKET_URL = \"wss://clownchat.herokuapp.com\";\nif (DEBUG) {\n  HOST_URL = \"http://127.0.0.1:8000\";\n  SOCKET_URL = \"ws://127.0.0.1:8000\";\n}\n\nexport { HOST_URL, SOCKET_URL };\n","import { SOCKET_URL } from \"./settings\";\n\nclass WebSocketService {\n  static instance = null;\n  callbacks = {};\n\n  static getInstance() {\n    if (!WebSocketService.instance) {\n      WebSocketService.instance = new WebSocketService();\n    }\n    return WebSocketService.instance;\n  }\n\n  constructor() {\n    this.socketRef = null;\n  }\n\n  connect(chatUrl) {\n    const path = `${SOCKET_URL}/ws/chat/${chatUrl}/`;\n    this.socketRef = new WebSocket(path);\n    this.socketRef.onopen = () => {\n      console.log(\"WebSocket open\");\n    };\n    this.socketRef.onmessage = e => {\n      this.socketNewMessage(e.data);\n    };\n    this.socketRef.onerror = e => {\n      console.log(e.message);\n    };\n    this.socketRef.onclose = () => {\n      console.log(\"WebSocket closed let's reopen\");\n      this.connect();\n    };\n  }\n\n  disconnect() {\n    this.socketRef.close();\n  }\n\n  socketNewMessage(data) {\n    const parsedData = JSON.parse(data);\n    const command = parsedData.command;\n    if (Object.keys(this.callbacks).length === 0) {\n      return;\n    }\n    if (command === \"messages\") {\n      this.callbacks[command](parsedData.messages);\n    }\n    if (command === \"new_message\") {\n      this.callbacks[command](parsedData.message);\n    }\n  }\n\n  fetchMessages(username, chatId) {\n    this.sendMessage({\n      command: \"fetch_messages\",\n      username: username,\n      chatId: chatId\n    });\n  }\n\n  newChatMessage(message) {\n    this.sendMessage({\n      command: \"new_message\",\n      from: message.from,\n      message: message.content,\n      chatId: message.chatId\n    });\n  }\n\n  addCallbacks(messagesCallback, newMessageCallback) {\n    this.callbacks[\"messages\"] = messagesCallback;\n    this.callbacks[\"new_message\"] = newMessageCallback;\n  }\n\n  sendMessage(data) {\n    try {\n      this.socketRef.send(JSON.stringify({ ...data }));\n    } catch (err) {\n      console.log(err.message);\n    }\n  }\n\n  state() {\n    return this.socketRef.readyState;\n  }\n}\n\nconst WebSocketInstance = WebSocketService.getInstance();\n\nexport default WebSocketInstance;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport WebSocketInstance from \"../websocket\";\nimport Hoc from \"../hoc/hoc\";\n\nclass Chat extends React.Component {\n  state = { message: \"\" };\n\n  initialiseChat() {\n    this.waitForSocketConnection(() => {\n      WebSocketInstance.fetchMessages(\n        this.props.username,\n        this.props.match.params.chatID\n      );\n    });\n    WebSocketInstance.connect(this.props.match.params.chatID);\n  }\n\n  constructor(props) {\n    super(props);\n    this.initialiseChat();\n  }\n\n  waitForSocketConnection(callback) {\n    const component = this;\n    setTimeout(function() {\n      if (WebSocketInstance.state() === 1) {\n        console.log(\"Connection is made\");\n        callback();\n        return;\n      } else {\n        console.log(\"wait for connection...\");\n        component.waitForSocketConnection(callback);\n      }\n    }, 100);\n  }\n\n  messageChangeHandler = event => {\n    this.setState({ message: event.target.value });\n  };\n\n  sendMessageHandler = e => {\n    e.preventDefault();\n    const messageObject = {\n      from: this.props.username,\n      content: this.state.message,\n      chatId: this.props.match.params.chatID\n    };\n    WebSocketInstance.newChatMessage(messageObject);\n    this.setState({ message: \"\" });\n  };\n\n  renderTimestamp = timestamp => {\n    let prefix = \"\";\n    const timeDiff = Math.round(\n      (new Date().getTime() - new Date(timestamp).getTime()) / 60000\n    );\n    if (timeDiff < 1) {\n      // less than one minute ago\n      prefix = \"just now...\";\n    } else if (timeDiff < 60 && timeDiff > 1) {\n      // less than sixty minutes ago\n      prefix = `${timeDiff} minutes ago`;\n    } else if (timeDiff < 24 * 60 && timeDiff > 60) {\n      // less than 24 hours ago\n      prefix = `${Math.round(timeDiff / 60)} hours ago`;\n    } else if (timeDiff < 31 * 24 * 60 && timeDiff > 24 * 60) {\n      // less than 7 days ago\n      prefix = `${Math.round(timeDiff / (60 * 24))} days ago`;\n    } else {\n      prefix = `${new Date(timestamp)}`;\n    }\n    return prefix;\n  };\n\n  renderMessages = messages => {\n    const currentUser = this.props.username;\n    return messages.map((message, i, arr) => (\n      <li\n        key={message.id}\n        style={{ marginBottom: arr.length - 1 === i ? \"300px\" : \"15px\" }}\n        className={message.author === currentUser ? \"sent\" : \"replies\"}\n      >\n        <img\n          src=\"http://emilcarlsson.se/assets/mikeross.png\"\n          alt=\"profile-pic\"\n        />\n        <p>\n          {message.content}\n          <br />\n          <small>{this.renderTimestamp(message.timestamp)}</small>\n        </p>\n      </li>\n    ));\n  };\n\n  scrollToBottom = () => {\n    this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  componentDidMount() {\n    this.scrollToBottom();\n  }\n\n  componentDidUpdate() {\n    this.scrollToBottom();\n  }\n\n  componentWillReceiveProps(newProps) {\n    if (this.props.match.params.chatID !== newProps.match.params.chatID) {\n      WebSocketInstance.disconnect();\n      this.waitForSocketConnection(() => {\n        WebSocketInstance.fetchMessages(\n          this.props.username,\n          newProps.match.params.chatID\n        );\n      });\n      WebSocketInstance.connect(newProps.match.params.chatID);\n    }\n  }\n\n  render() {\n    return (\n      <Hoc>\n        <div className=\"messages\">\n          <ul id=\"chat-log\">\n            {this.props.messages && this.renderMessages(this.props.messages)}\n            <div\n              style={{ float: \"left\", clear: \"both\" }}\n              ref={el => {\n                this.messagesEnd = el;\n              }}\n            />\n          </ul>\n        </div>\n        <div className=\"message-input\">\n          <form onSubmit={this.sendMessageHandler}>\n            <div className=\"wrap\">\n              <input\n                onChange={this.messageChangeHandler}\n                value={this.state.message}\n                required\n                id=\"chat-message-input\"\n                type=\"text\"\n                placeholder=\"Write your message...\"\n              />\n              <i className=\"fa fa-paperclip attachment\" aria-hidden=\"true\" />\n              <button id=\"chat-message-submit\" className=\"submit\">\n                <i className=\"fa fa-paper-plane\" aria-hidden=\"true\" />\n              </button>\n            </div>\n          </form>\n        </div>\n      </Hoc>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    username: state.auth.username,\n    messages: state.message.messages\n  };\n};\n\nexport default connect(mapStateToProps)(Chat);\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport Hoc from \"./hoc/hoc\";\n\nimport Chat from \"./containers/Chat\";\n\nconst BaseRouter = () => (\n  <Hoc>\n    <Route exact path=\"/:chatID/\" component={Chat} />\n  </Hoc>\n);\n\nexport default BaseRouter;\n","import axios from \"axios\";\nimport * as actionTypes from \"./actionTypes\";\nimport { HOST_URL } from \"../../settings\";\n\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\n\nexport const authSuccess = (username, token) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token,\n    username: username\n  };\n};\n\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\n\nexport const logout = () => {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"username\");\n  localStorage.removeItem(\"expirationDate\");\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\n\nexport const checkAuthTimeout = expirationTime => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\n\nexport const authLogin = (username, password) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios\n      .post(`${HOST_URL}/rest-auth/login/`, {\n        username: username,\n        password: password\n      })\n      .then(res => {\n        const token = res.data.key;\n        const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"username\", username);\n        localStorage.setItem(\"expirationDate\", expirationDate);\n        dispatch(authSuccess(username, token));\n        dispatch(checkAuthTimeout(3600));\n      })\n      .catch(err => {\n        dispatch(authFail(err));\n      });\n  };\n};\n\nexport const authSignup = (username, email, password1, password2) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios\n      .post(`${HOST_URL}/rest-auth/registration/`, {\n        username: username,\n        email: email,\n        password1: password1,\n        password2: password2\n      })\n      .then(res => {\n        const token = res.data.key;\n        const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"username\", username);\n        localStorage.setItem(\"expirationDate\", expirationDate);\n        dispatch(authSuccess(username, token));\n        dispatch(checkAuthTimeout(3600));\n      })\n      .catch(err => {\n        dispatch(authFail(err));\n      });\n  };\n};\n\nexport const authCheckState = () => {\n  return dispatch => {\n    const token = localStorage.getItem(\"token\");\n    const username = localStorage.getItem(\"username\");\n    if (token === undefined) {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        dispatch(authSuccess(username, token));\n        dispatch(\n          checkAuthTimeout(\n            (expirationDate.getTime() - new Date().getTime()) / 1000\n          )\n        );\n      }\n    }\n  };\n};\n","import axios from \"axios\";\nimport * as actionTypes from \"./actionTypes\";\nimport { HOST_URL } from \"../../settings\";\n\nexport const addMessage = message => {\n  return {\n    type: actionTypes.ADD_MESSAGE,\n    message: message\n  };\n};\n\nexport const setMessages = messages => {\n  return {\n    type: actionTypes.SET_MESSAGES,\n    messages: messages\n  };\n};\n\nconst getUserChatsSuccess = chats => {\n  return {\n    type: actionTypes.GET_CHATS_SUCCESS,\n    chats: chats\n  };\n};\n\nexport const getUserChats = (username, token) => {\n  return dispatch => {\n    axios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\";\n    axios.defaults.xsrfCookieName = \"csrftoken\";\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Token ${token}`\n    };\n    axios\n      .get(`${HOST_URL}/chat/?username=${username}`)\n      .then(res => dispatch(getUserChatsSuccess(res.data)));\n  };\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Contact = props => (\n  <NavLink to={`${props.chatURL}`} style={{ color: \"#fff\" }}>\n    <li className=\"contact\">\n      <div className=\"wrap\">\n        <span className={`contact-status ${props.status}`} />\n        <img src={props.picURL} alt=\"\" />\n        <div className=\"meta\">\n          <p className=\"name\">{props.name}</p>\n          {/* <p className=\"preview\">You just got LITT up, Mike.</p> */}\n        </div>\n      </div>\n    </li>\n  </NavLink>\n);\n\nexport default Contact;\n","import React from \"react\";\nimport { Spin, Icon } from \"antd\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../store/actions/auth\";\nimport * as navActions from \"../store/actions/nav\";\nimport * as messageActions from \"../store/actions/message\";\nimport Contact from \"../components/Contact\";\n\nconst antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\n\nclass Sidepanel extends React.Component {\n  state = {\n    loginForm: true\n  };\n\n  waitForAuthDetails() {\n    const component = this;\n    setTimeout(function() {\n      if (\n        component.props.token !== null &&\n        component.props.token !== undefined\n      ) {\n        component.props.getUserChats(\n          component.props.username,\n          component.props.token\n        );\n        return;\n      } else {\n        console.log(\"waiting for authentication details...\");\n        component.waitForAuthDetails();\n      }\n    }, 100);\n  }\n\n  componentDidMount() {\n    this.waitForAuthDetails();\n  }\n\n  openAddChatPopup() {\n    this.props.addChat();\n  }\n\n  changeForm = () => {\n    this.setState({ loginForm: !this.state.loginForm });\n  };\n\n  authenticate = e => {\n    e.preventDefault();\n    if (this.state.loginForm) {\n      this.props.login(e.target.username.value, e.target.password.value);\n    } else {\n      this.props.signup(\n        e.target.username.value,\n        e.target.email.value,\n        e.target.password.value,\n        e.target.password2.value\n      );\n    }\n  };\n\n  render() {\n    let activeChats = this.props.chats.map(c => {\n      return (\n        <Contact\n          key={c.id}\n          name=\"Harvey Specter\"\n          picURL=\"http://emilcarlsson.se/assets/louislitt.png\"\n          status=\"busy\"\n          chatURL={`/${c.id}`}\n        />\n      );\n    });\n    return (\n      <div id=\"sidepanel\">\n        <div id=\"profile\">\n          <div className=\"wrap\">\n            <img\n              id=\"profile-img\"\n              src=\"http://emilcarlsson.se/assets/mikeross.png\"\n              className=\"online\"\n              alt=\"\"\n            />\n            <p>Mike Ross</p>\n            <i\n              className=\"fa fa-chevron-down expand-button\"\n              aria-hidden=\"true\"\n            />\n            <div id=\"status-options\">\n              <ul>\n                <li id=\"status-online\" className=\"active\">\n                  <span className=\"status-circle\" /> <p>Online</p>\n                </li>\n                <li id=\"status-away\">\n                  <span className=\"status-circle\" /> <p>Away</p>\n                </li>\n                <li id=\"status-busy\">\n                  <span className=\"status-circle\" /> <p>Busy</p>\n                </li>\n                <li id=\"status-offline\">\n                  <span className=\"status-circle\" /> <p>Offline</p>\n                </li>\n              </ul>\n            </div>\n            <div id=\"expanded\">\n              {this.props.loading ? (\n                <Spin indicator={antIcon} />\n              ) : this.props.isAuthenticated ? (\n                <button onClick={() => this.props.logout()} className=\"authBtn\">\n                  <span>Logout</span>\n                </button>\n              ) : (\n                <div>\n                  <form method=\"POST\" onSubmit={this.authenticate}>\n                    {this.state.loginForm ? (\n                      <div>\n                        <input\n                          name=\"username\"\n                          type=\"text\"\n                          placeholder=\"username\"\n                        />\n                        <input\n                          name=\"password\"\n                          type=\"password\"\n                          placeholder=\"password\"\n                        />\n                      </div>\n                    ) : (\n                      <div>\n                        <input\n                          name=\"username\"\n                          type=\"text\"\n                          placeholder=\"username\"\n                        />\n                        <input name=\"email\" type=\"email\" placeholder=\"email\" />\n                        <input\n                          name=\"password\"\n                          type=\"password\"\n                          placeholder=\"password\"\n                        />\n                        <input\n                          name=\"password2\"\n                          type=\"password\"\n                          placeholder=\"password confirm\"\n                        />\n                      </div>\n                    )}\n\n                    <button type=\"submit\">Authenticate</button>\n                  </form>\n\n                  <button onClick={this.changeForm}>Switch</button>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n        <div id=\"search\">\n          <label htmlFor=\"\">\n            <i className=\"fa fa-search\" aria-hidden=\"true\" />\n          </label>\n          <input type=\"text\" placeholder=\"Search Chats...\" />\n        </div>\n        <div id=\"contacts\">\n          <ul>{activeChats}</ul>\n        </div>\n        <div id=\"bottom-bar\">\n          <button id=\"addChat\" onClick={() => this.openAddChatPopup()}>\n            <i className=\"fa fa-user-plus fa-fw\" aria-hidden=\"true\" />\n            <span>Create chat</span>\n          </button>\n          <button id=\"settings\">\n            <i className=\"fa fa-cog fa-fw\" aria-hidden=\"true\" />\n            <span>Settings</span>\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null,\n    loading: state.auth.loading,\n    token: state.auth.token,\n    username: state.auth.username,\n    chats: state.message.chats\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    login: (userName, password) =>\n      dispatch(actions.authLogin(userName, password)),\n    logout: () => dispatch(actions.logout()),\n    signup: (username, email, password1, password2) =>\n      dispatch(actions.authSignup(username, email, password1, password2)),\n    addChat: () => dispatch(navActions.openAddChatPopup()),\n    getUserChats: (username, token) =>\n      dispatch(messageActions.getUserChats(username, token))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Sidepanel);\n","import * as actionTypes from \"./actionTypes\";\n\nexport const openAddChatPopup = () => {\n  return {\n    type: actionTypes.OPEN_ADD_CHAT_POPUP\n  };\n};\n\nexport const closeAddChatPopup = () => {\n  return {\n    type: actionTypes.CLOSE_ADD_CHAT_POPUP\n  };\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport Hoc from \"../hoc/hoc\";\n\nclass Profile extends React.Component {\n  render() {\n    if (this.props.token === null) {\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <div className=\"contact-profile\">\n        {this.props.username !== null ? (\n          <Hoc>\n            <img src=\"http://emilcarlsson.se/assets/harveyspecter.png\" alt=\"\" />\n            <p>{this.props.username}</p>\n            <div className=\"social-media\">\n              <i className=\"fa fa-facebook\" aria-hidden=\"true\" />\n              <i className=\"fa fa-twitter\" aria-hidden=\"true\" />\n              <i className=\"fa fa-instagram\" aria-hidden=\"true\" />\n            </div>\n          </Hoc>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    username: state.auth.username,\n    token: state.auth.token\n  };\n};\n\nexport default connect(mapStateToProps)(Profile);\n","import React from \"react\";\nimport { Form, Button, Select } from \"antd\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport * as navActions from \"../store/actions/nav\";\nimport * as messageActions from \"../store/actions/message\";\nimport { HOST_URL } from \"../settings\";\n\nconst FormItem = Form.Item;\n\nfunction hasErrors(fieldsError) {\n  return Object.keys(fieldsError).some(field => fieldsError[field]);\n}\n\nclass HorizontalAddChatForm extends React.Component {\n  state = {\n    usernames: [],\n    error: null\n  };\n\n  handleChange = value => {\n    this.setState({\n      usernames: value\n    });\n  };\n\n  componentDidMount() {\n    this.props.form.validateFields();\n  }\n\n  handleSubmit = e => {\n    const { usernames } = this.state;\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        const combined = [...usernames, this.props.username];\n        axios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\";\n        axios.defaults.xsrfCookieName = \"csrftoken\";\n        axios.defaults.headers = {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${this.props.token}`\n        };\n        axios\n          .post(`${HOST_URL}/chat/create/`, {\n            messages: [],\n            participants: combined\n          })\n          .then(res => {\n            this.props.history.push(`/${res.data.id}`);\n            this.props.closeAddChatPopup();\n            this.props.getUserChats(this.props.username, this.props.token);\n          })\n          .catch(err => {\n            console.error(err);\n            this.setState({\n              error: err\n            });\n          });\n      }\n    });\n  };\n\n  render() {\n    const {\n      getFieldDecorator,\n      getFieldsError,\n      getFieldError,\n      isFieldTouched\n    } = this.props.form;\n\n    const userNameError =\n      isFieldTouched(\"userName\") && getFieldError(\"userName\");\n    return (\n      <Form layout=\"inline\" onSubmit={this.handleSubmit}>\n        {this.state.error ? `${this.state.error}` : null}\n        <FormItem\n          validateStatus={userNameError ? \"error\" : \"\"}\n          help={userNameError || \"\"}\n        >\n          {getFieldDecorator(\"userName\", {\n            rules: [\n              {\n                required: true,\n                message:\n                  \"Please input the username of the person you want to chat with\"\n              }\n            ]\n          })(\n            <Select\n              mode=\"tags\"\n              style={{ width: \"100%\" }}\n              placeholder=\"Tags Mode\"\n              onChange={this.handleChange}\n            >\n              {[]}\n            </Select>\n          )}\n        </FormItem>\n        <FormItem>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            disabled={hasErrors(getFieldsError())}\n          >\n            Start a chat\n          </Button>\n        </FormItem>\n      </Form>\n    );\n  }\n}\n\nconst AddChatForm = Form.create()(HorizontalAddChatForm);\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token,\n    username: state.auth.username\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    closeAddChatPopup: () => dispatch(navActions.closeAddChatPopup()),\n    getUserChats: (username, token) =>\n      dispatch(messageActions.getUserChats(username, token))\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(AddChatForm)\n);\n","import React from \"react\";\nimport { Modal } from \"antd\";\nimport Form from \"./Form\";\n\nclass AddChatModal extends React.Component {\n  render() {\n    return (\n      <Modal\n        centered\n        footer={null}\n        visible={this.props.isVisible}\n        onCancel={this.props.close}\n      >\n        <Form />\n      </Modal>\n    );\n  }\n}\n\nexport default AddChatModal;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport BaseRouter from \"./routes\";\nimport Sidepanel from \"./containers/Sidepanel\";\nimport Profile from \"./containers/Profile\";\nimport AddChatModal from \"./containers/Popup\";\nimport * as actions from \"./store/actions/auth\";\nimport * as navActions from \"./store/actions/nav\";\nimport * as messageActions from \"./store/actions/message\";\nimport WebSocketInstance from \"./websocket\";\nimport \"./assets/style.css\";\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.onTryAutoSignup();\n  }\n\n  constructor(props) {\n    super(props);\n    WebSocketInstance.addCallbacks(\n      this.props.setMessages.bind(this),\n      this.props.addMessage.bind(this)\n    );\n  }\n\n  render() {\n    return (\n      <Router>\n        <div id=\"frame\">\n          <Sidepanel />\n          <div className=\"content\">\n            <AddChatModal\n              isVisible={this.props.showAddChatPopup}\n              close={() => this.props.closeAddChatPopup()}\n            />\n            <Profile />\n            <BaseRouter />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    showAddChatPopup: state.nav.showAddChatPopup,\n    authenticated: state.auth.token\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState()),\n    closeAddChatPopup: () => dispatch(navActions.closeAddChatPopup()),\n    addMessage: message => dispatch(messageActions.addMessage(message)),\n    setMessages: messages => dispatch(messageActions.setMessages(messages))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore, compose, applyMiddleware, combineReducers } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport \"antd/dist/antd.css\";\nimport authReducer from \"./store/reducers/auth\";\nimport navReducer from \"./store/reducers/nav\";\nimport messageReducer from \"./store/reducers/message\";\nimport App from \"./App\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nfunction configureStore() {\n  const rootReducer = combineReducers({\n    auth: authReducer,\n    nav: navReducer,\n    message: messageReducer\n  });\n\n  const store = createStore(\n    rootReducer,\n    composeEnhancers(applyMiddleware(thunk))\n  );\n\n  //   if (module.hot) {\n  //     module.hot.accept(\"./store/reducers\", () => {\n  //       const nextRootReducer = require(\"./store/reducers/auth\");\n  //       store.replaceReducer(nextRootReducer);\n  //     });\n  //   }\n\n  return store;\n}\n\nconst store = configureStore();\n\nconst app = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById(\"app\"));\n"],"sourceRoot":""}